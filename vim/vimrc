" Gotta be first
set nocompatible

filetype off

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'VundleVim/Vundle.vim'

" ----- Making Vim look good ------------------------------------------
Plugin 'liuchengxu/space-vim-dark'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'

" ----- Vim as a programmer's text editor -----------------------------
Plugin 'scrooloose/nerdtree'
Plugin 'jistr/vim-nerdtree-tabs'
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'tpope/vim-commentary'
Plugin 'terryma/vim-multiple-cursors'
Plugin 'vim-syntastic/syntastic'
Plugin 'xolox/vim-misc'
" Plugin 'xolox/vim-easytags'
Plugin 'majutsushi/tagbar'
Plugin 'Valloric/YouCompleteMe'
Plugin 'joonty/vim-do'

" ----- LaTeX ---------------------------------------------------------
Plugin 'lervag/vimtex'

" ----- Working on remote ---------------------------------------------
" Plugin 'eshion/vim-sync'
" ----- Working with Git ----------------------------------------------
Plugin 'airblade/vim-gitgutter'
Plugin 'tpope/vim-fugitive'

" ----- Other text editing features -----------------------------------
Plugin 'Raimondi/delimitMate'

" ----- man pages, tmux -----------------------------------------------
" Plugin 'jez/vim-superman'
Plugin 'christoomey/vim-tmux-navigator'

" ----- Syntax plugins ------------------------------------------------
Plugin 'jez/vim-c0'
Plugin 'jez/vim-ispc'
Plugin 'kchmck/vim-coffee-script'


" ----- Python plugins ------------------------------------------------
Plugin 'google/yapf', { 'rtp': 'plugins/vim' }
" Plugin 'davidhalter/jedi-vim'
Plugin 'alfredodeza/pytest.vim'



call vundle#end()

filetype plugin indent on

" --- General settings ---
" colors
syntax on
" ui config
set number relativenumber
augroup numbertoggle
  autocmd!
  autocmd BufEnter,FocusGained,InsertLeave * set relativenumber
  autocmd BufLeave,FocusLost,InsertEnter   * set norelativenumber
augroup END

set cursorline
filetype indent on
set wildmenu
set exrc
set lazyredraw
set showmatch
set textwidth=80
set wrapmargin=2
set colorcolumn=+1        " highlight column after 'textwidth'
set encoding=utf-8
" set shortmess=a
" search
set incsearch
set hlsearch
nnoremap <leader><space> :nohlsearch<CR>
" folding
set foldenable
set foldlevelstart=10
set foldnestmax=10
" noremap <space> za
set foldmethod=indent


set backspace=indent,eol,start
set ruler
set termguicolors

syntax on

set mouse=a

" We need this for plugins like Syntastic and vim-gitgutter which put symbols
" in the sign column.
hi clear SignColumn

" ----- Plugin-Specific Settings --------------------------------------
" ----- liuchengxu/space-vim-dark -----
let g:space_vim_dark_background = 234
color space-vim-dark


" ----- bling/vim-airline settings -----
" Always show statusbar
set laststatus=2

" Fancy arrow symbols, requires a patched font
" To install a patched font, run over to
"     https://github.com/abertsch/Menlo-for-Powerline
" download all the .ttf files, double-click on them and click "Install"
" Finally, uncomment the next line
let g:airline_powerline_fonts = 1

" Show PASTE if in paste mode
let g:airline_detect_paste=1

" Show airline for tabs too
let g:airline#extensions#tabline#enabled = 1

" Use the solarized theme for the Airline status bar
let g:airline_theme='base16_spacemacs'

" ----- jistr/vim-nerdtree-tabs -----
" Open/close NERDTree Tabs with \t
nmap <silent> <leader>t :NERDTreeTabsToggle<CR>
" To have NERDTree always open on startup
let g:nerdtree_tabs_open_on_console_startup = 0


" ----- ctrlpvim/ctrlp -----
" Setup some default ignores
let g:ctrlp_custom_ignore = {
  \ 'dir':  '\v[\/](\.(git|hg|svn)|\_site)$',
  \ 'file': '\v\.(exe|so|dll|class|png|jpg|jpeg|DS_Store|pyc)$',
\}

" Use the nearest .git directory as the cwd
" This makes a lot of sense if you are working on a project that is in version
" control. It also supports works with .svn, .hg, .bzr.
let g:ctrlp_working_path_mode = 'r'

" Use a leader instead of the actual named binding
nmap <leader>p :CtrlP<cr>

" ----- scrooloose/syntastic settings -----
let g:syntastic_error_symbol = '✘'
let g:syntastic_warning_symbol = "▲"
let g:syntastic_aggregate_errors = 1
augroup mySyntastic
  au!
  au FileType tex,python let b:syntastic_mode = "passive"
augroup END
let g:syntastic_python_checkers = ['pylint']
let g:syntastic_check_on_wq = 0


" ----- xolox/vim-easytags settings -----
" Where to look for tags files
" set tags=~/.vimtags
" Sensible defaults
" let g:easytags_events = ['BufReadPost', 'BufWritePost']
" let g:easytags_async = 1
" let g:easytags_dynamic_files = 2
" let g:easytags_resolve_links = 1
" let g:easytags_suppress_ctags_warning = 1
" let g:easytags_python_enable = 1
" let g:easytags_auto_highlight = 0

" ----- majutsushi/tagbar settings -----
" Open/close tagbar with \b
nmap <silent> <leader>b :TagbarToggle<CR>
" Uncomment to open tagbar automatically whenever possible
"autocmd BufEnter * nested :call tagbar#autoopen(0)


" ----- lervag/vimtex -----
"  Continuous compilation
let g:vimtex_compiler_latexmk = {
        \ 'callback' : 1,
        \ 'continuous' : 1,
        \ 'executable' : 'latexmk',
\}
let g:vimtex_latexmk_continuous = 1
let g:vimtex_fold_enable = 1
" let g:vimtex_view_general_viewer = 'open'
" let g:vimtex_view_general_options = '-a Skim'

" ----- eshion/vim-sync -----
" autocmd BufWritePost * :call SyncUploadFile() | redraw!
" autocmd BufReadPre * :call SyncDownloadFile()

" ----- airblade/vim-gitgutter settings -----
" In vim-airline, only display "hunks" if the diff is non-zero
let g:airline#extensions#hunks#non_zero_only = 1

" ----- Raimondi/delimitMate settings -----
let delimitMate_expand_cr = 1
augroup mydelimitMate
  au!
  au FileType markdown let b:delimitMate_nesting_quotes = ["`"]
  au FileType tex let b:delimitMate_quotes = ""
  au FileType tex let b:delimitMate_matchpairs = "(:),[:],{:},`:'"
  au FileType python let b:delimitMate_nesting_quotes = ['"', "'"]
augroup END

" ----- jez/vim-superman settings -----
" better man page support
" noremap K :SuperMan <cword><CR>


" ----- google/yapf -----
map <C-Y> :call yapf#YAPF()<cr>
imap <C-Y> <c-o>:call yapf#YAPF()<cr>

" ----- davidhalter/jedi-vim -----
" let g:jedi#use_splits_not_buffers = "right"


" ----- custom key mappings -----
" set <M-j> = "\ej"
" set <M-l> = "\el"
" map <M-j> :bn
" map <M-l> :bp


set secure
